# -*- coding: utf-8 -*-
from Traitement import*
from reportlab.lib import colors
from reportlab.lib.pagesizes import A4,landscape
from reportlab.platypus import Image, Table, TableStyle, Paragraph
from reportlab.lib.units import cm
from reportlab.pdfgen.canvas import Canvas
from reportlab.lib.styles import getSampleStyleSheet


styles = getSampleStyleSheet()
style = styles["BodyText"]

canv = Canvas("doc.pdf", pagesize=landscape(A4))

CHU = Image('image.D7ADZZ.png')
CHU.drawHeight = 1.25*cm*CHU.drawHeight / CHU.drawWidth
CHU.drawWidth = 1.25*cm

LOGO = Image('logo.png')
LOGO.drawHeight = 1.25*cm*LOGO.drawHeight / LOGO.drawWidth
LOGO.drawWidth = 1.25*cm

'''Intialisation contenu'''

DPN=""
nb_foetus=""
nb_mere=""
nb_pere=""
date=""
nom=""
Concordance=""
Contamination=""

header = Paragraph("<b><font size=14.5> Etude de la contamination materno-foetale et de la bonne identité des ADN lors de la réalisation d’un diagnostic prénatal à l’aide du kit PowerPlex ® 16 System </font></b>", style)

C = Paragraph("<font size=12><b><u>Conclusion</u></b></font>",style)

Conclusion = Paragraph("<font size=12><b>Concordance : "+Concordance+"<br/> <br/>Contamination : "+Contamination+"</b></font>",style)

'''Création table'''

#Titre = [[CHU,header,LOGO]]
Titre = [[header]]
HEADER = Table(Titre)
HEADER.setStyle(TableStyle([("BOX", (0, 0), (0,0), 0.25, colors.black),
                            ('INNERGRID', (0, 0), (-1, -1), 0.25, colors.black)]))


entete = [[Paragraph("<font size=12>Indication du DPN : "+DPN+"</font>",style),"",""],
          [Paragraph("<font size=12>N°du fœtus : "+nb_foetus+"</font>",style),Paragraph("<font size=12>N°/Nom de la mère : "+nb_mere+"</font>",style),Paragraph("<font size=12>N°/Nom du père : "+nb_pere+"</font>",style)],
          [Paragraph("<font size=12>Date du run : "+date+"</font>",style),Paragraph("<font size=12>Nom du projet : "+nom+"</font>",style),""]]
t_entete = Table(entete)



data = [ ["Marqueurs","Concordance des ADN","Contamination materno-fœtale","",""],
         ["","","Informativité","       Résultat       ","Pourcentage de contamination"],
         ["Amelogenin","","","",""] ,
	 ["CSF1PO","","","",""],
	 ["D13S317","","","",""],
	 ["D16S539","","","",""],
	 ["D18S51","","","",""],
	 ["D21S11","","","",""],
	 ["D3S1358","","","",""],
	 ["D5S818","","","",""],
	 ["D7S820","","","",""],
	 ["D8S1179","","","",""],
	 ["FGA","","","",""],
	 ["Penta D","","","",""],
	 ["Penta E","","","",""],
	 ["THO1","","","",""],
	 ["TPOX","","","",""],
	 ["vWA","","","",""]]

t = Table(data)
t.setStyle(TableStyle([("BOX", (0, 0), (-1, -1), 0.25, colors.black),
			('SPAN',(2,0),(4,0)),
			('SPAN',(0,0),(0,1)),
			('SPAN',(1,0),(1,1)),
			('ALIGN',(0,0),(4,17),'CENTER'),
			('VALIGN',(0,1),(4,1),'MIDDLE'),
			('VALIGN',(0,0),(0,1),'MIDDLE'),
			('VALIGN',(1,0),(1,1),'MIDDLE'),
                       	('INNERGRID', (0, 0), (-1, -1), 0.25, colors.black)]))

for ligne in range(2,len(data)):
    if ligne % 2 == 0:
        bg_color = colors.white
    else:
        bg_color = colors.lightgrey
    t.setStyle(TableStyle([('BACKGROUND', (0, ligne), (-1, ligne), bg_color)]))


'''Remplissage avec Analyse'''
    
'''Placement table et paragraphes dans PDF'''

aW = 640
aH = 560

w, h = HEADER.wrap(aW, aH)
HEADER.drawOn(canv, 85, aH)

aH = aH - h
w, h = t_entete.wrap(aW,aH)
t_entete.drawOn(canv, 100,aH-h)


aH = aH - (h+30)
w, h = t.wrap(aW, aH)
t.drawOn(canv, 152, aH-h)

aH = aH - 20
w, f = C.wrap(aW, aH)
C.drawOn(canv,100, aH-h)

aH = aH - 50
w, f = Conclusion.wrap(aW, aH)
Conclusion.drawOn(canv,120, aH-h)

canv.save()

M, F, P, Echantillon_F, log = lecture_fichier("2018-03-27 foetus 90-10_PP16.txt")
concl,log = traitement_donnees(M,F,Echantillon_F,log)
print(concl)
